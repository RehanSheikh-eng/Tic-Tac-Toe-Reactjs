{"version":3,"sources":["components/square/index.js","components/board/index.js","components/game/index.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","ButtonGroup","variant","color","aria-label","Button","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"gOAYeA,MARf,SAAgBC,GACZ,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,SCwBAC,E,kKA1Bb,SAAaC,GAAI,IAAD,OACd,OACE,cAAC,EAAD,CACEF,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAKxC,WACE,OACE,sBAAKJ,UAAU,OAAf,UACE,8BAAMK,KAAKE,aAAa,KACxB,8BAAMF,KAAKE,aAAa,KACxB,8BAAMF,KAAKE,aAAa,KACxB,8BAAMF,KAAKE,aAAa,KACxB,8BAAMF,KAAKE,aAAa,KACxB,8BAAMF,KAAKE,aAAa,KACxB,8BAAMF,KAAKE,aAAa,KACxB,8BAAMF,KAAKE,aAAa,KACxB,8BAAMF,KAAKE,aAAa,Y,GArBZC,a,gBCyFpB,SAASC,EAAgBH,GAWvB,IAVA,IAAMI,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAN,EAAI,EAAGA,EAAIM,EAAMC,OAAQP,IAAK,CAAC,IAAD,cACnBM,EAAMN,GADa,GAC9BQ,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIR,EAAQM,IAAMN,EAAQM,KAAON,EAAQO,IAAMP,EAAQM,KAAON,EAAQQ,GACpE,OAAOR,EAAQM,GAGnB,OAAO,KAGMG,M,kDAzGb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,CACXC,QAAS,CAAC,CACRX,QAASY,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,+CAWnB,SAAYjB,GACV,IAAMa,EAAUZ,KAAKW,MAAMC,QAAQK,MAAM,EAAGjB,KAAKW,MAAMI,WAAa,GAE9Dd,EADUW,EAAQA,EAAQN,OAAO,GACfL,QAAQgB,QAC5Bb,EAAgBH,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKW,MAAMK,QAAU,IAAM,IACxChB,KAAKkB,SAAS,CACZN,QAASA,EAAQO,OAAO,CAAC,CACvBlB,QAASA,KAEXc,WAAYH,EAAQN,OACpBU,SAAUhB,KAAKW,MAAMK,a,oBAIzB,SAAOI,GACLpB,KAAKkB,SAAS,CACZH,WAAYK,EACZJ,QAAUI,EAAO,IAAO,M,oBAI5B,WAAU,IA0BJC,EA1BG,OAEDT,EAAUZ,KAAKW,MAAMC,QACrBU,EAAUV,EAAQZ,KAAKW,MAAMI,YAC7BQ,EAASnB,EAAgBkB,EAAQrB,SAEjCuB,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,cAACE,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,aAAW,4CAHb,SAKE,cAACC,EAAA,EAAD,CACEH,QAAQ,WACRjC,QAAS,kBAAM,EAAKqC,OAAOP,IAF7B,SAIKC,SAaX,OALEN,EADEE,EACO,WAAaA,EAEb,iBAAmBvB,KAAKW,MAAMK,QAAU,IAAM,KAIvD,sBAAKrB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,CACEM,QAASqB,EAAQrB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAKmC,YAAYnC,QAGrC,sBAAKJ,UAAU,YAAf,UACE,8BAAM0B,IACN,6BAAKG,c,GA/EIrB,aCFnBgC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d6e0fcb5.chunk.js","sourcesContent":["\r\nimport {React} from 'react';\r\nimport '../../index.css'\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n\r\nexport default Square;","import {React, Component} from 'react';\r\nimport Square from '../square';\r\nimport '../../index.css'\r\n\r\nclass Board extends Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid\">\r\n        <div>{this.renderSquare(0)}</div>\r\n        <div>{this.renderSquare(1)}</div>\r\n        <div>{this.renderSquare(2)}</div>\r\n        <div>{this.renderSquare(3)}</div>\r\n        <div>{this.renderSquare(4)}</div>\r\n        <div>{this.renderSquare(5)}</div>\r\n        <div>{this.renderSquare(6)}</div>\r\n        <div>{this.renderSquare(7)}</div>\r\n        <div>{this.renderSquare(8)}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;","import { Component } from \"react\";\r\nimport Board from '../board'\r\nimport '../../index.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport { ButtonGroup } from \"@material-ui/core\";\r\n\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length-1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n  \r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <ButtonGroup \r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          aria-label=\"contained primary button group key={move}\"\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => this.jumpTo(move)}\r\n          >\r\n              {desc}\r\n          </Button>\r\n        </ButtonGroup>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Game\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Game from './components/game';\r\n\r\nReactDOM.render(\r\n    <Game/>,\r\n    document.getElementById(\"root\"));"],"sourceRoot":""}